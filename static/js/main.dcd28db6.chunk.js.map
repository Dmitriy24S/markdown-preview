{"version":3,"sources":["App.js","initial-text-state.js","index.js"],"names":["App","useState","templateText","setTemplateText","markdown","marked","breaks","className","id","value","onChange","e","target","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOA4CeA,MAvCf,WACE,MAAwCC,mBCNpB,q7BDMpB,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWC,IAAOH,EAAc,CAAEI,QAAQ,IAWhD,OACE,sBAAKC,UAAU,gBAAf,UACE,oBAAIA,UAAU,MAAd,8BACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,2CACA,0BACEA,UAAU,mBACVC,GAAG,SACHC,MAAOP,EACPQ,SApBW,SAACC,GACpBR,EAAgBQ,EAAEC,OAAOH,aAsBrB,sBAAKF,UAAU,QAAf,UACE,0CACA,qBACEA,UAAU,2CACVC,GAAG,UACHK,wBAAyB,CAAEC,OAAQV,eE/B/CW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dcd28db6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport marked from \"marked\";\nimport DOMPurify from \"dompurify\";\nimport initialTextState from \"./initial-text-state\";\n\nfunction App() {\n  const [templateText, setTemplateText] = useState(initialTextState);\n  const markdown = marked(templateText, { breaks: true });\n  const handleChange = (e) => {\n    setTemplateText(e.target.value);\n  };\n\n  // Marked does not sanitize the output HTML\n  // DOMPurify to sanitize :\n\n  // const cleanText = DOMPurify.sanitize(templateText);\n  // const markdown = marked(cleanText, { breaks: true });\n\n  return (\n    <div className=\"App container\">\n      <h4 className=\"m-4\">Markdown Preview</h4>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h6>Markdown:</h6>\n          <textarea\n            className=\"form-control p-2\"\n            id=\"editor\"\n            value={templateText}\n            onChange={handleChange}\n          ></textarea>\n        </div>\n        <div className=\"col-6\">\n          <h6>Preview:</h6>\n          <div\n            className=\"preview rounded p-2 text-black text-left\"\n            id=\"preview\"\n            dangerouslySetInnerHTML={{ __html: markdown }}\n          ></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialTextState = `# React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n\r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.org), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | -------------\r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbered lists too.\r\n1. Use just 1s if you want!\r\n1. And last but not least, let's not forget embedded images:\r\n\r\n![freeCodeCamp Logo](https://cdn.freecodecamp.org/testable-projects-fcc/images/fcc_secondary.svg)\r\n`;\r\n\r\nexport default initialTextState;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}